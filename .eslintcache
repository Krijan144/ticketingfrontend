[{"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\index.js":"1","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\App.js":"3","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routes.js":"4","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\contextapi\\authContext.js":"5","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routerGuard.js":"6","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\main.js":"7","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\post_answer.js":"8","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\dropdown.js":"9","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\ans_query.js":"10","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\querylist.js":"11","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_button.js":"12","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_answeredlist.js":"13","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\button.js":"14","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header2.js":"15","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\login.js":"16","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\queryform.js":"17","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\getanswer.js":"18","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header.js":"19","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\register.js":"20","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_querylist.js":"21","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_register.js":"22","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_role.js":"23","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_query.js":"24","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_login.js":"25","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antrole.js":"26"},{"size":561,"mtime":1610466567648,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610466567649,"results":"29","hashOfConfig":"28"},{"size":245,"mtime":1612691115267,"results":"30","hashOfConfig":"28"},{"size":2898,"mtime":1612777420222,"results":"31","hashOfConfig":"28"},{"size":748,"mtime":1612690886691,"results":"32","hashOfConfig":"28"},{"size":406,"mtime":1610687203981,"results":"33","hashOfConfig":"28"},{"size":392,"mtime":1612690886686,"results":"34","hashOfConfig":"28"},{"size":2521,"mtime":1612690886686,"results":"35","hashOfConfig":"28"},{"size":1673,"mtime":1612690886683,"results":"36","hashOfConfig":"28"},{"size":2343,"mtime":1612690886679,"results":"37","hashOfConfig":"28"},{"size":2870,"mtime":1612690886687,"results":"38","hashOfConfig":"28"},{"size":12254,"mtime":1613020253806,"results":"39","hashOfConfig":"28"},{"size":1680,"mtime":1610690713775,"results":"40","hashOfConfig":"28"},{"size":793,"mtime":1612690886680,"results":"41","hashOfConfig":"28"},{"size":1225,"mtime":1610466567643,"results":"42","hashOfConfig":"28"},{"size":3669,"mtime":1612777304666,"results":"43","hashOfConfig":"28"},{"size":3939,"mtime":1612776576833,"results":"44","hashOfConfig":"28"},{"size":1527,"mtime":1612690886683,"results":"45","hashOfConfig":"28"},{"size":2081,"mtime":1612690886684,"results":"46","hashOfConfig":"28"},{"size":4564,"mtime":1612690886689,"results":"47","hashOfConfig":"28"},{"size":5547,"mtime":1612690886690,"results":"48","hashOfConfig":"28"},{"size":4694,"mtime":1612695257270,"results":"49","hashOfConfig":"28"},{"size":2970,"mtime":1612953965437,"results":"50","hashOfConfig":"28"},{"size":615,"mtime":1612771697033,"results":"51","hashOfConfig":"28"},{"size":4253,"mtime":1612780303246,"results":"52","hashOfConfig":"28"},{"size":3767,"mtime":1613023097131,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1wo6m60",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"56"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\index.js",[],["117","118"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\App.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routes.js",["119"],"import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport queryform from \"./components/queryform\";\r\nimport postanswer from \"./components/post_answer\";\r\nimport getanswer from \"./components/getanswer\";\r\nimport Login from \"./components/login\";\r\nimport Nav1 from \"./components/header\";\r\nimport home from \"./components/main\";\r\nimport querylist from \"./components/querylist\";\r\nimport ans_query from \"./components/ans_query\";\r\nimport dropdown from \"./components/dropdown\";\r\nimport register from \"./components/register\";\r\nimport RouterGuard from \"./routerGuard\";\r\nimport { AuthContext } from \"./contextapi/authContext\";\r\nimport st_button from \"./components/st_button\";\r\nimport st_answeredlist from \"./components/st_answeredlist\";\r\nimport st_querylist from \"./components/st_querylist\";\r\nimport st_register from \"./components/st_register\";\r\nimport st_role from \"./components/st_role\";\r\nimport st_query from \"./components/st_query\";\r\nimport st_login from \"./components/st_login\";\r\nimport button from \"./components/button\";\r\n\r\nconst Routes = () => {\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {isLoggedin ? <Nav1 /> : null}\r\n\r\n      <RouterGuard\r\n        path=\"/queryform\"\r\n        exact\r\n        component={queryform}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/postanswer/:id\"\r\n        exact\r\n        component={postanswer}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <Route path=\"/getanswer/:id\" exact component={getanswer} />\r\n      <Route\r\n        path=\"/login\"\r\n        exact\r\n        component={Login}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/\"\r\n        exact\r\n        component={home}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/button\"\r\n        exact\r\n        component={button}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <Route path=\"/st_querylist/\" exact component={st_querylist} />\r\n      <Route path=\"/st_answeredlist/\" exact component={st_answeredlist} />\r\n      <Route path=\"/st_button/\" exact component={st_button} />\r\n      <Route path=\"/st_register\" exact component={st_register} />\r\n      <Route path=\"/st_role\" exact component={st_role} />\r\n      <Route path=\"/st_login\" exact component={st_login} />\r\n      <Route path=\"/st_query\" exact component={st_query} />\r\n      <Route path=\"/dropdown\" exact component={dropdown} />\r\n      <Route path=\"/register\" exact component={register} />\r\n      <Route path=\"/querylist\" exact component={querylist} />\r\n      <Route path=\"/ans_query\" exact component={ans_query} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\contextapi\\authContext.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routerGuard.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\main.js",["120","121"],"import React, { useContext } from 'react';\r\nimport { AuthContext } from '../contextapi/authContext';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [user, setUser] = useContext(AuthContext).uso;\r\n\r\n    return (\r\n        <div className=\"container mt-5 text-center welcome\" >\r\n            <h1 >WELCOME </h1>\r\n            <h3>We are here to help.</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\post_answer.js",["122","123"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport querylist from \"./querylist\";\r\nimport { AuthContext } from \"../contextapi/authContext\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nclass postanswer extends Component {\r\n    static contextType = AuthContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answer: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.getAttribute(\"name\")]: event.target.value });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.props);\r\n        const id = this.props.match.params.id;\r\n\r\n        axios({\r\n\r\n            url: `http://localhost:8000/api/answer/${id}`,\r\n            method: \"POST\",\r\n            data: this.state,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            if (window.confirm(\"Your Answer to the query has been Submitted!\")) {\r\n                window.location.href = \"/st_button\";\r\n            }\r\n        })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props.match.params.id)\r\n        console.log(this.props.location.aboutProps.user)\r\n        const query = this.props.location.aboutProps.query;\r\n        const queryID = this.props.match.params.id;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"container my-4\">\r\n                    <h2>Answering Form</h2>\r\n                    Query:<br />\r\n                    <b>{query}</b>\r\n                    <form onSubmit={this.handleSubmit} className=\"mt-3\">\r\n                        <label>\r\n                            Answer:<br />\r\n                            <textarea type=\"text\" rows=\"4\" cols=\"50\" name=\"answer\" value={this.state.answer} onChange={this.handleChange} />\r\n                            <br />\r\n                            {/* Userid: */}\r\n                            {/* <input type=\"text\" name=\"query\" value={queryID} onChange={this.handleChange} /> */}\r\n                            <Button variant=\"success\" type=\"Submit\">Submit</Button>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default postanswer","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\dropdown.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\ans_query.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\querylist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_button.js",["124","125","126","127","128","129"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_answeredlist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\button.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header2.js",["130","131"],"import React,{Component} from 'react';\r\nimport {Navbar,NavDropdown,Form,FormControl,Nav,Button} from 'react-bootstrap';\r\n\r\nclass Nav2 extends Component{\r\n\r\n    render(){return(\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">TECHRIDA STAFF</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <Nav.Link href=\"/queryform\">SubmitQuery</Nav.Link>\r\n                <Nav.Link href=\"/querylist\">QueryList</Nav.Link>\r\n                <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" >\r\n                    <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/register\">Register</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n                <Form inline>\r\n                \r\n                </Form>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n    )}\r\n}\r\n\r\nexport default Nav2",["132","133"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\login.js",["134","135","136","137"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/login/\",\r\n      method: \"POST\",\r\n      data: { email, password },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response, \"response from login\");\r\n        const { token, user } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setUser({\r\n          token: localStorage.getItem(\"token\"),\r\n          user: JSON.parse(localStorage.getItem(\"user\")),\r\n        });\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n        setIsLoggedin(true);\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! You are logged in.</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">LOGIN</h3>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n          <Link to=\"/register\" style={{ fontSize: \"12px\" }}>\r\n            Don't have an account ? Register\r\n          </Link>{\" \"}\r\n          <br />\r\n          <Link to=\"/st_login\" style={{ fontSize: \"12px\" }}>\r\n            Staff Login\r\n          </Link>{\" \"}\r\n          <br /> <br />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\queryform.js",["138","139"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"./css/askQuery.css\";\r\n\r\nclass Queryform extends Component {\r\n  static contextType = AuthContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      q_role: [],\r\n      formData: {\r\n        query: \"\",\r\n        ellaborate: \"\",\r\n\r\n        q_type: \"\",\r\n      },\r\n      submitted: false,\r\n    };\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.context.uso[0]?.user.id;\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      const role = res.data;\r\n      console.log(role);\r\n      this.setState({ q_role: role });\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState((prev) => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        [event.target.getAttribute(\"name\")]: event.target.value,\r\n      },\r\n    }));\r\n    console.log(this.context.uso[0].user);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.context.uso[0].user.id);\r\n    const id = this.context.uso[0]?.user.id;\r\n    const token = this.context.uso[0].token;\r\n    console.log(this.state);\r\n    axios({\r\n      url: `http://localhost:8000/api/query/${id}`,\r\n      method: \"POST\",\r\n      data: this.state.formData,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n        // this.setState((p) => ({\r\n        //   formData: { ...p.formData, query: \"\", ellaborate: \"\" },\r\n        // }));\r\n        // console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    //const {name} = this.context;\r\n    //console.log(name)\r\n\r\n    return (\r\n      <div className=\"container p-5 col-lg-5 col-md-5 offset-md-4 askQuery mt-5\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {this.state.submitted && (\r\n            <Alert variant=\"success\">\r\n              Success! Your problem will be noticed fast.\r\n            </Alert>\r\n          )}\r\n          <h3 className=\"my-3 text-center\">SUBMIT YOUR QUERIES</h3>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label>Select Type</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={this.state.formData.q_type}\r\n              name=\"q_type\"\r\n              onChange={this.handleChange}\r\n            >\r\n              {/* <option selected>Open this select type</option> */}\r\n              {this.state.q_role.map((list) => {\r\n                return <option id={list.id}>{list.role}</option>;\r\n              })}\r\n              {/* <option></option> */}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Query</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"query\"\r\n              value={this.state.formData.query}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Ellaborate</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={this.state.formData.ellaborate}\r\n              rows=\"5\"\r\n              name=\"ellaborate\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Queryform;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\getanswer.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\register.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_querylist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_register.js",["140"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./css/register.css\";\r\n\r\nclass register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordCheck: \"\",\r\n      q_role: [],\r\n      role: \"\",\r\n      show: false,\r\n      error: \"\",\r\n      submitted: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      const role = res.data;\r\n      console.log(role);\r\n      this.setState({ q_role: role });\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios({\r\n      url: \"http://localhost:8000/users/stregister\",\r\n      method: \"POST\",\r\n      data: this.state,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          fullname: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordCheck: \"\",\r\n          role: \"\",\r\n          submitted: true,\r\n          show: false,\r\n        });\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        this.setState({\r\n          show: true,\r\n          error: err.response.data.msg,\r\n        });\r\n      });\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.getAttribute(\"name\")]: event.target.value });\r\n    console.log(this.state.role);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col-lg-5 col-md-5  offset-md-4 my-5 register\">\r\n          {this.state.show ? (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          ) : null}\r\n          {this.state.submitted && (\r\n            <Alert variant=\"success\">\r\n              Success! You are successfully registered.\r\n            </Alert>\r\n          )}\r\n          <h3 className=\"text-center my-5\">REGISTER STAFF</h3>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"username\"\r\n                name=\"fullname\"\r\n                value={this.state.fullname}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Re-type Password\"\r\n                name=\"passwordCheck\"\r\n                value={this.state.passwordCheck}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={this.state.value}\r\n                onChange={(e) => {\r\n                  this.setState({ role: e.target.value });\r\n                }}\r\n              >\r\n                {this.state.q_role.map((list) => {\r\n                  return <option id={list.id}>{list.role}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <br /> <br />\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default register;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_role.js",["141","142","143","144"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst Role = (props) => {\r\n  const [role, setRole] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [qrole, setQrole] = useState([]);\r\n\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/api/query/q_role/\").then((res) => {\r\n      console.log(res);\r\n      setQrole(res.data);\r\n    });\r\n  }, []);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/api/query/q_role/\",\r\n      method: \"POST\",\r\n      data: { role },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! New role admitted</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">Enter New Role</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter New Role\"\r\n                  name=\"email\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n              <br /> <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <h4>Registered role</h4>\r\n            {qrole.map((list) => {\r\n              return <ol>{list.role}</ol>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_query.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_login.js",["145","146","147","148"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst St_login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [q_role, setQRole] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res.data, \"ok\");\r\n      setQRole(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/st_login/\",\r\n      method: \"POST\",\r\n      data: { email, password, role },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response, \"response from login\");\r\n        const { token, user } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setUser({\r\n          token: localStorage.getItem(\"token\"),\r\n          user: JSON.parse(localStorage.getItem(\"user\")),\r\n        });\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n        setIsLoggedin(true);\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! You are logged in.</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">STAFF LOGIN</h3>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label>Select Type</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"q_type\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            >\r\n              {/* <option selected>Open this select type</option> */}\r\n              {q_role.map((list) => {\r\n                return <option id={list.id}>{list.role}</option>;\r\n              })}\r\n              {/* <option></option> */}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default St_login;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antrole.js",["149","150","151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":25,"column":22,"nodeType":"158","messageId":"159","endLine":25,"endColumn":35},{"ruleId":"156","severity":1,"message":"160","line":7,"column":12,"nodeType":"158","messageId":"159","endLine":7,"endColumn":16},{"ruleId":"156","severity":1,"message":"161","line":7,"column":18,"nodeType":"158","messageId":"159","endLine":7,"endColumn":25},{"ruleId":"156","severity":1,"message":"162","line":3,"column":8,"nodeType":"158","messageId":"159","endLine":3,"endColumn":17},{"ruleId":"156","severity":1,"message":"163","line":49,"column":15,"nodeType":"158","messageId":"159","endLine":49,"endColumn":22},{"ruleId":"156","severity":1,"message":"164","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":62,"column":15,"nodeType":"167","messageId":"168","endLine":62,"endColumn":38},{"ruleId":"165","severity":1,"message":"166","line":64,"column":14,"nodeType":"167","messageId":"168","endLine":64,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":65,"column":15,"nodeType":"167","messageId":"168","endLine":65,"endColumn":48},{"ruleId":"169","severity":1,"message":"170","line":89,"column":22,"nodeType":"171","messageId":"172","endLine":89,"endColumn":24},{"ruleId":"156","severity":1,"message":"173","line":134,"column":9,"nodeType":"158","messageId":"159","endLine":134,"endColumn":16},{"ruleId":"156","severity":1,"message":"174","line":2,"column":33,"nodeType":"158","messageId":"159","endLine":2,"endColumn":44},{"ruleId":"156","severity":1,"message":"175","line":2,"column":49,"nodeType":"158","messageId":"159","endLine":2,"endColumn":55},{"ruleId":"152","replacedBy":"176"},{"ruleId":"154","replacedBy":"177"},{"ruleId":"156","severity":1,"message":"178","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"179","line":3,"column":31,"nodeType":"158","messageId":"159","endLine":3,"endColumn":36},{"ruleId":"156","severity":1,"message":"180","line":14,"column":10,"nodeType":"158","messageId":"159","endLine":14,"endColumn":20},{"ruleId":"156","severity":1,"message":"160","line":17,"column":10,"nodeType":"158","messageId":"159","endLine":17,"endColumn":14},{"ruleId":"156","severity":1,"message":"181","line":28,"column":11,"nodeType":"158","messageId":"159","endLine":28,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":121,"column":15,"nodeType":"184","endLine":121,"endColumn":23},{"ruleId":"156","severity":1,"message":"164","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":14},{"ruleId":"156","severity":1,"message":"179","line":3,"column":31,"nodeType":"158","messageId":"159","endLine":3,"endColumn":36},{"ruleId":"156","severity":1,"message":"164","line":5,"column":22,"nodeType":"158","messageId":"159","endLine":5,"endColumn":26},{"ruleId":"156","severity":1,"message":"160","line":17,"column":10,"nodeType":"158","messageId":"159","endLine":17,"endColumn":14},{"ruleId":"156","severity":1,"message":"161","line":17,"column":16,"nodeType":"158","messageId":"159","endLine":17,"endColumn":23},{"ruleId":"156","severity":1,"message":"179","line":3,"column":31,"nodeType":"158","messageId":"159","endLine":3,"endColumn":36},{"ruleId":"156","severity":1,"message":"164","line":5,"column":22,"nodeType":"158","messageId":"159","endLine":5,"endColumn":26},{"ruleId":"156","severity":1,"message":"180","line":16,"column":10,"nodeType":"158","messageId":"159","endLine":16,"endColumn":20},{"ruleId":"156","severity":1,"message":"160","line":19,"column":10,"nodeType":"158","messageId":"159","endLine":19,"endColumn":14},{"ruleId":"156","severity":1,"message":"185","line":2,"column":32,"nodeType":"158","messageId":"159","endLine":2,"endColumn":35},{"ruleId":"156","severity":1,"message":"186","line":2,"column":37,"nodeType":"158","messageId":"159","endLine":2,"endColumn":40},{"ruleId":"156","severity":1,"message":"187","line":11,"column":9,"nodeType":"158","messageId":"159","endLine":11,"endColumn":15},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'setIsLoggedin' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'querylist' is defined but never used.","'queryID' is assigned a value but never used.","'Link' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dynamic' is assigned a value but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.",["188"],["189"],"'useEffect' is defined but never used.","'Modal' is defined but never used.","'isLoggedin' is assigned a value but never used.","'id' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Col' is defined but never used.","'Row' is defined but never used.","'Option' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]