[{"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/index.js":"1","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/App.js":"2","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/reportWebVitals.js":"3","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/queryform.js":"4","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/post_answer.js":"5","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/getanswer.js":"6","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/login.js":"7","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/main.js":"8","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/header.js":"9","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/querylist.js":"10","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/st_querylist.js":"11","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/register.js":"12","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/dropdown.js":"13","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/header2.js":"14","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/contextapi/authContext.js":"15","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/routes.js":"16","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/routerGuard.js":"17"},{"size":543,"mtime":1610503241989,"results":"18","hashOfConfig":"19"},{"size":1008,"mtime":1610686722613,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1610015020903,"results":"21","hashOfConfig":"19"},{"size":3380,"mtime":1610686722613,"results":"22","hashOfConfig":"19"},{"size":1962,"mtime":1610259583337,"results":"23","hashOfConfig":"19"},{"size":1459,"mtime":1610437023475,"results":"24","hashOfConfig":"19"},{"size":3231,"mtime":1610686722613,"results":"25","hashOfConfig":"19"},{"size":254,"mtime":1610686722613,"results":"26","hashOfConfig":"19"},{"size":1851,"mtime":1610686722613,"results":"27","hashOfConfig":"19"},{"size":1631,"mtime":1610686722613,"results":"28","hashOfConfig":"19"},{"size":2074,"mtime":1610686722613,"results":"29","hashOfConfig":"19"},{"size":5431,"mtime":1610437023479,"results":"30","hashOfConfig":"19"},{"size":1587,"mtime":1610015020903,"results":"31","hashOfConfig":"19"},{"size":1195,"mtime":1610015020903,"results":"32","hashOfConfig":"19"},{"size":661,"mtime":1610686722613,"results":"33","hashOfConfig":"19"},{"size":1729,"mtime":1610686722613,"results":"34","hashOfConfig":"19"},{"size":368,"mtime":1610686722613,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"p74q4e",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/index.js",[],["81","82"],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/App.js",["83"],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/reportWebVitals.js",[],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/queryform.js",["84","85"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport querylist from \"./querylist\";\nimport { AuthContext } from \"../contextapi/authContext\";\nimport { Form, Button, Alert } from 'react-bootstrap'\n\n\nclass Queryform extends Component {\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      query1: [],\n      formData: {\n        ellaborate: \"\",\n        query: \"\",\n      },\n      submitted: false\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    //this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // componentDidMount() {\n  //   const id = this.context.uso[0].user.id\n  //   console.log(id);\n\n  //   axios.get(`http://localhost:8000/api/query/${id}`)\n  //     .then(res => {\n  //       console.log(res);\n  //       const query = res.data.data\n  //       this.setState(\n  //         { query1: query }\n  //       )\n  //     }\n  //     )\n  // }\n\n  handleChange(event) {\n    this.setState((prev) => ({ formData: { ...prev.formData, [event.target.getAttribute(\"name\")]: event.target.value } }));\n    console.log(this.context.uso[0].user);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    console.log(this.context.uso[0].user.id)\n    const id = this.context.uso[0].user.id\n    const token = this.context.uso[0].token\n    console.log(this.state);\n    axios({\n\n      url: `http://localhost:8000/api/query/${id}`,\n      method: \"POST\",\n      data: this.state.formData,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(response => {\n      this.setState(\n        {\n          submitted: true,\n        }\n      )\n      this.setState((prev) => ({ formData: { ...prev.formData, query: '', ellaborate: '' } }))\n      console.log(response)\n    })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  render() {\n    //const {name} = this.context;\n    //console.log(name)\n    return (\n      <div className=\"container p-5 col-5 offset-md-4\">\n        <Form onSubmit={this.handleSubmit} >\n          {this.state.submitted && <Alert variant='success'>Success! Your problem will be noticed fast.</Alert>}\n          <h3>SUBMIT YOUR QUERIES</h3>\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\n            <Form.Label>Select Query</Form.Label>\n            <Form.Control as=\"select\" value={this.state.formData.query} onChange={(event) => this.setState((prev) => ({ formData: { ...prev.formData, query: event.target.value } }))}>\n              {this.state.query1.map(querylist =>\n                <option id={querylist.id} value={querylist.value}>{querylist.query}</option>\n              )\n              }\n            </Form.Control>\n          </Form.Group>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Query</Form.Label>\n            <Form.Control type=\"text\" name=\"query\" value={this.state.formData.query} onChange={this.handleChange} />\n          </Form.Group>\n\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <Form.Label>Ellaborate</Form.Label>\n            <Form.Control as=\"textarea\" rows={3} value={this.state.formData.ellaborate} rows=\"5\" name=\"ellaborate\" onChange={this.handleChange} />\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Queryform;","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/post_answer.js",["86"],"import React,{Component} from \"react\";\nimport axios from \"axios\";\nimport querylist from \"./querylist\";\n\nclass postanswer extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            answered_by:\"\",\n            answer:\"\",\n            query:this.props.match.params.id\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n   // componentWillReceiveProps(){\n     //   this.setState({query:this.props.match.params.id});\n   // }\n    handleChange(event){\n        this.setState({[event.target.getAttribute(\"name\")]:event.target.value});\n    }\n    handleSubmit(event){\n        event.preventDefault();\n\n        axios({\n            url:\"http://127.0.0.1:8000/post_answer/\",\n            method:\"POST\",\n            data:this.state,\n            headers:{\n                \"Content-Type\":\"application/json\"\n            }\n        }).then(response=>{\n            console.log(response)\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n\n    }\n    render(){\n        console.log(this.props.match.params.id)\n        // const queryID = this.props.match.params.id;\n        return(\n            <div className=\"container\">\n                <h2>Answering Form</h2>\n                <form onSubmit={this.handleSubmit}>\n                <label>\n                    Answered_by:\n                    <input type=\"text\" name=\"answered_by\" value={this.state.answered_by} onChange={this.handleChange}/>\n                    Answer:\n                    <input type=\"text\" name=\"answer\" value={this.state.answer} onChange={this.handleChange}/>\n                    {/* Userid: */}\n                    {/* <input type=\"text\" name=\"query\" value={queryID} onChange={this.handleChange} /> */}\n                    <input type=\"submit\" value=\"Submit\" className=\"btn-primary\"/>\n                </label>\n                </form>\n            </div>\n        )\n    }\n} \nexport default postanswer","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/getanswer.js",["87","88","89","90","91","92","93"],"import React, { Component } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from \"../contextapi/authContext\"\nimport { useHistory, Link } from 'react-router-dom';\nimport { Navbar, NavDropdown, Form, FormControl, Nav, Button } from 'react-bootstrap';\n\n\n\nclass getanswer extends Component {\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      answers: [],\n\n    };\n\n  }\n\n  componentDidMount() {\n    console.log(this.props.match.params.id)\n    const id = this.props.match.params.id\n    axios.get(`http://localhost:8000/api/answer/${id}`)\n      .then(res => {\n        console.log(res);\n        this.setState({ answers: res.data?.answer });\n\n      })\n  }\n\n\n  render() {\n\n    const { answers } = this.state;\n    return (\n      <div className=\"container mt-5\">\n        <ul className=\"listgroup\">\n          {!this.state.answers ?\n            <h3>Yet to be answered</h3>\n            :\n            <div>Answer : <li className=\"list-group-item\">{answers}</li><br /></div>\n\n\n          }\n          <Link to=\"/querylist\" className=\"mr-5\" style={{ color: 'white' }}>\n            <button className=\"btn btn-secondary\">\n              Back\n          </button>\n          </Link>\n\n\n          {/* {answers && answers.map(answer =>\n                 <li>{answer.answered_by}</li>\n                )}    <h1>hello</h1>\n                \n                */}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default getanswer;","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/login.js",["94","95","96","97","98"],"import React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { AuthContext } from '../contextapi/authContext';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n\nconst Login = (props) => {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [show, setShow] = useState(false);\n    const [submitted, setSubmitted] = useState(false);\n    const [isAutheticated, setIsAutheticated] = useContext(AuthContext).auth;\n    const [user, setUser] = useContext(AuthContext).uso;\n    let history = useHistory();\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n\n        axios({\n            url: \"http://localhost:8000/users/login/\",\n            method: \"POST\",\n            data: { email, password },\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            console.log(response)\n            const { token, user } = response.data\n            localStorage.setItem(\"token\", token)\n            localStorage.setItem(\"user\", JSON.stringify(user));\n            console.log(response)\n            setIsAutheticated(true)\n            setSubmitted(true)\n            setShow(false)\n            history.push('/queryform')\n\n        }).catch(err => {\n            console.log(err.response.data.msg)\n            setShow(true)\n            setError(err.response.data.msg)\n        })\n    }\n\n\n    useEffect(() => {\n        if (localStorage.getItem('token') == user.token) {\n            setIsAutheticated(true)\n        }\n    }, [])\n\n    return (\n        <div className=\"container p-5\">\n            <div className=\"col-lg-5 offset-md-4\">\n                {show ? <Alert variant='danger'>\n                    {error}\n                </Alert> : null}\n                {submitted && <Alert variant='success'>Success! You are logged in.</Alert>}\n\n\n                <h3 className=\"text-center my-5\">LOGIN</h3>\n\n                <Form onSubmit={handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n                        <Form.Text className=\"text-muted\">\n                            We'll never share your email with anyone else.\n                         </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\n                    </Form.Group>\n\n                    <Button variant=\"primary\" type=\"submit\">Login</Button>\n\n                </Form>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/main.js",["99"],"import React, { useContext } from 'react';\nimport { AuthContext } from '../contextapi/authContext';\n\n\nconst Home = () => {\n    const [user, setUser] = useContext(AuthContext).uso;\n    return (\n        <div className=\"container mt-5 text-center\">\n            <h1 >WELCOME</h1>\n            <h5>{user.user?.email}</h5>\n        </div>\n    )\n}\nexport default Home;\n\n","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/header.js",["100","101","102"],"import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom'\nimport { Navbar, NavDropdown, Form, FormControl, Nav, Button } from 'react-bootstrap';\nimport { AuthContext } from '../contextapi/authContext';\nimport { Redirect, useHistory } from 'react-router-dom';\n\n\nconst Nav1 = () => {\n\n    // const [isAutheticated, setIsAutheticated] = useContext(AuthContext).auth;\\\n    const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\n\n    let history = useHistory();\n\n\n    const handleOut = () => {\n        localStorage.clear();\n        history.push(\"/login\");\n        setIsLoggedin(false)\n    }\n\n\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\n            <div className=\"container\">\n                <Navbar.Brand as={Link} to=\"/\">TECHRIDA</Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Nav.Link as={Link} to=\"/\" className=\"mr-5\">Home</Nav.Link>\n                        <Nav.Link as={Link} to=\"/queryform\" className=\"mr-5\">SubmitQuery</Nav.Link>\n                        {/* <Link to=\"/queryform\">SubmitQuery</Link> */}\n                        <Nav.Link as={Link} to=\"/querylist\" className=\"mr-5\">QueryList</Nav.Link>\n\n                        {isLoggedin ?\n                            <Nav.Link href=\"/\" onClick={handleOut}>Logout</Nav.Link>\n                            :\n                            <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" >\n                                <NavDropdown.Item as={Link} to=\"/login\">Login</NavDropdown.Item>\n                                <NavDropdown.Item as={Link} to=\"/register\">Register</NavDropdown.Item>\n                            </NavDropdown>\n                        }\n\n                    </Nav>\n                    <Form inline>\n\n                    </Form>\n                </Navbar.Collapse>\n            </div>\n        </Navbar >\n\n    )\n\n}\n\nexport default Nav1","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/querylist.js",[],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/st_querylist.js",[],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/register.js",["103"],"import React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport axios from 'axios'\nimport { AuthContext } from '../contextapi/authContext'\n\nclass register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            fullname: \"\",\n            email: \"\",\n            password: \"\",\n            passwordCheck: \"\",\n            role: \"customer\",\n            show: false,\n            error: \"\",\n            submitted: false\n\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        axios({\n            url: \"http://localhost:8000/users/register\",\n            method: \"POST\",\n            data: this.state,\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        }).then(response => {\n            this.setState({\n                fullname: \"\",\n                email: \"\",\n                password: \"\",\n                passwordCheck: \"\",\n                role: \"\",\n                submitted: true,\n                show: false\n            });\n            console.log(response)\n        }).catch(err => {\n            console.log(err.response.data.msg)\n            this.setState({\n                show: true,\n                error: err.response.data.msg\n            })\n        })\n\n    }\n    handleChange(event) {\n        this.setState({ [event.target.getAttribute(\"name\")]: event.target.value });\n        console.log(this.state.role);\n\n    }\n\n    //email, password, passwordCheck, fullname \n\n    render() {\n        return (\n            <div className=\"container\">\n                {/* <form onSubmit={this.handleSubmit}>\n                    <label>\n                        Email:<br />\n                        <input type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} /><br />\n                    Username:<br />\n                        <input type=\"text\" name=\"fullname\" value={this.state.fullname} onChange={this.handleChange} /><br />\n\n                    Password:<br />\n                        <input type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} /><br />\n                    Confirm Password:<br />\n                        <input type=\"text\" name=\"passwordCheck\" value={this.state.passwordCheck} onChange={this.handleChange} /><br />\n                    </label><br />\n                    <input type=\"submit\" value=\"REGISTER\" className=\"btn-primary\" />\n                </form> */}\n\n\n                <div className=\"col-lg-5 col-md-5  offset-md-4 my-5\">\n\n\n                    {this.state.show ? <Alert variant='danger'>\n                        {this.state.error}\n                    </Alert> : null}\n                    {this.state.submitted && <Alert variant='success'>Success! You are successfully registered.</Alert>}\n                    <h3 className=\"text-center my-5\">SIGN UP</h3>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label>Email</Form.Label>\n                            <Form.Control type=\"email\" placeholder=\"Enter email\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\n                            <Form.Text className=\"text-muted\">\n                                We'll never share your email with anyone else.\n                         </Form.Text>\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicUsername\">\n                            <Form.Label>Username</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"username\" name=\"fullname\" value={this.state.fullname} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label>Confirm Password</Form.Label>\n                            <Form.Control type=\"password\" placeholder=\"Re-type Password\" name=\"passwordCheck\" value={this.state.passwordCheck} onChange={this.handleChange} />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                            <Form.Label>Role</Form.Label>\n                            <Form.Control as=\"select\" value={this.state.value} onChange={(e) => { this.setState({ role: e.target.value }) }}>\n                                <option value=\"customer\">customer</option>\n                                <option value=\"admin\">admin</option>\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"checkbox\" label=\"Remember me\" />\n                        </Form.Group>\n                        <Button variant=\"primary\" type=\"submit\">Register</Button>\n\n                    </Form>\n                </div>\n            </div>\n        )\n    }\n}\nexport default register","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/dropdown.js",["104"],"import React,{Component} from 'react';\nimport axios from 'axios';\nimport {} from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\n\nclass dropdown extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            query:[],\n        };\n      //  this.state={\n            \n      //  },\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit1 = this.handleSubmit1.bind(this);\n    }\n    \n    componentDidMount(){\n        axios.get(`http://127.0.0.1:8000/getquery`)\n        .then(res=>\n            {\n                console.log(res);\n                const query = res.data\n                this.setState(\n                    {query}\n                )\n            }\n            )\n    }\n    handleChange(event){\n        console.log(\"clicked\");\n       console.log(this.props.match.params.id)\n    }\n    handleSubmit1(event){\n        console.log(\"clicked\");\n    }\n    // handleClick(id){\n    //     console.log(id);\n    //     <Link to={\n    //         \"/getanswer/:id\"\n    //     }\n    //     />\n    // }\n    render(){\n        return(\n        <div className=\"container p-3\">\n            <label>\n            <select onClick={this.handleChange} >\n                {this.state.query.map(querylist => <option >{querylist.query}</option>)}\n            </select>\n            <br />\n            <div className=\"container p-1\">\n            <input type=\"submit\" value=\"Submit\" className=\"btn-primary\" onClick={this.handleSubmit1} />\n            </div >\n            </label> \n            </div>\n        )\n    }\n}\n\nexport default dropdown","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/components/header2.js",["105","106"],"import React,{Component} from 'react';\nimport {Navbar,NavDropdown,Form,FormControl,Nav,Button} from 'react-bootstrap';\n\nclass Nav2 extends Component{\n\n    render(){return(\n                <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">TECHRIDA STAFF</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"/\">Home</Nav.Link>\n                <Nav.Link href=\"/queryform\">SubmitQuery</Nav.Link>\n                <Nav.Link href=\"/querylist\">QueryList</Nav.Link>\n                <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" >\n                    <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\n                    <NavDropdown.Item href=\"/register\">Register</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Logout</NavDropdown.Item>\n                </NavDropdown>\n                </Nav>\n                <Form inline>\n                \n                </Form>\n            </Navbar.Collapse>\n            </Navbar>\n\n    )}\n}\n\nexport default Nav2","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/contextapi/authContext.js",[],"/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/routes.js",["107","108","109","110","111"],"import React, { useContext, useState } from 'react'\nimport { BrowserRouter, Route, Switch, Redirect, Router } from 'react-router-dom';\nimport queryform from './components/queryform'\nimport postanswer from './components/post_answer'\nimport getanswer from './components/getanswer'\nimport Login from './components/login'\nimport Nav1 from './components/header'\nimport home from './components/main'\nimport querylist from './components/querylist'\nimport st_querylist from './components/st_querylist'\nimport dropdown from './components/dropdown'\nimport register from './components/register'\nimport Nav2 from './components/header2'\nimport RouterGuard from './routerGuard';\nimport { AuthContext } from './contextapi/authContext';\n\nconst Routes = () => {\n    // const [isAutheticated, setIsAutheticated] = useContext(AuthContext).auth;\n    const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\n\n    if (!(localStorage.getItem(\"token\") === null)) {\n        setIsLoggedin(true)\n    }\n\n    return (\n        <BrowserRouter>\n            <Nav1 />\n            <RouterGuard\n                path='/queryform'\n                exact\n                component={queryform}\n                auth={!isLoggedin}\n                redirect='/login'\n            />\n            <RouterGuard\n                path='/postanswer/:id'\n                exact\n                component={postanswer}\n                auth={!isLoggedin}\n                redirect='/login'\n            />\n            <Route\n                path='/getanswer/:id'\n                exact\n                component={getanswer}\n            />\n            <Route\n                path='/login'\n                exact\n                component={Login}\n                auth={!isLoggedin}\n                redirect='/login'\n            />\n            <Route\n                path='/'\n                exact\n                component={home}\n            />\n            <RouterGuard\n                path='/querylist/'\n                exact\n                component={querylist}\n                auth={!isLoggedin}\n                redirect='/login'\n            />\n            <Route path='/st_querylist/' exact component={st_querylist} />\n            <Route path='/dropdown' exact component={dropdown} />\n            <Route path='/register' exact component={register} />\n            {/* <Switch>\n             <Redirect from='/querylist/:id' to='/getanswer/:id'/>\n             <Route path='/getanswer/:id'/>\n           </Switch> */}\n\n        </BrowserRouter>\n    )\n}\n\nexport default Routes\n","/home/sgn13/Documents/React/ticket_client/ticketingfrontend/src/routerGuard.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":99,"column":89,"nodeType":"123","endLine":99,"endColumn":97},{"ruleId":"116","severity":1,"message":"120","line":3,"column":8,"nodeType":"118","messageId":"119","endLine":3,"endColumn":17},{"ruleId":"116","severity":1,"message":"124","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":20},{"ruleId":"116","severity":1,"message":"125","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":16},{"ruleId":"116","severity":1,"message":"126","line":5,"column":18,"nodeType":"118","messageId":"119","endLine":5,"endColumn":29},{"ruleId":"116","severity":1,"message":"127","line":5,"column":31,"nodeType":"118","messageId":"119","endLine":5,"endColumn":35},{"ruleId":"116","severity":1,"message":"128","line":5,"column":37,"nodeType":"118","messageId":"119","endLine":5,"endColumn":48},{"ruleId":"116","severity":1,"message":"129","line":5,"column":50,"nodeType":"118","messageId":"119","endLine":5,"endColumn":53},{"ruleId":"116","severity":1,"message":"130","line":5,"column":55,"nodeType":"118","messageId":"119","endLine":5,"endColumn":61},{"ruleId":"116","severity":1,"message":"131","line":1,"column":27,"nodeType":"118","messageId":"119","endLine":1,"endColumn":36},{"ruleId":"116","severity":1,"message":"132","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":18},{"ruleId":"116","severity":1,"message":"133","line":16,"column":12,"nodeType":"118","messageId":"119","endLine":16,"endColumn":22},{"ruleId":"116","severity":1,"message":"134","line":18,"column":12,"nodeType":"118","messageId":"119","endLine":18,"endColumn":16},{"ruleId":"116","severity":1,"message":"135","line":18,"column":18,"nodeType":"118","messageId":"119","endLine":18,"endColumn":25},{"ruleId":"116","severity":1,"message":"135","line":6,"column":18,"nodeType":"118","messageId":"119","endLine":6,"endColumn":25},{"ruleId":"116","severity":1,"message":"128","line":3,"column":37,"nodeType":"118","messageId":"119","endLine":3,"endColumn":48},{"ruleId":"116","severity":1,"message":"130","line":3,"column":55,"nodeType":"118","messageId":"119","endLine":3,"endColumn":61},{"ruleId":"116","severity":1,"message":"132","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":18},{"ruleId":"116","severity":1,"message":"136","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":21},{"ruleId":"116","severity":1,"message":"137","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":14},{"ruleId":"116","severity":1,"message":"128","line":2,"column":33,"nodeType":"118","messageId":"119","endLine":2,"endColumn":44},{"ruleId":"116","severity":1,"message":"130","line":2,"column":49,"nodeType":"118","messageId":"119","endLine":2,"endColumn":55},{"ruleId":"116","severity":1,"message":"117","line":1,"column":29,"nodeType":"118","messageId":"119","endLine":1,"endColumn":37},{"ruleId":"116","severity":1,"message":"138","line":2,"column":32,"nodeType":"118","messageId":"119","endLine":2,"endColumn":38},{"ruleId":"116","severity":1,"message":"132","line":2,"column":40,"nodeType":"118","messageId":"119","endLine":2,"endColumn":48},{"ruleId":"116","severity":1,"message":"139","line":2,"column":50,"nodeType":"118","messageId":"119","endLine":2,"endColumn":56},{"ruleId":"116","severity":1,"message":"140","line":13,"column":8,"nodeType":"118","messageId":"119","endLine":13,"endColumn":12},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'querylist' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useHistory' is defined but never used.","'Navbar' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Nav' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'Redirect' is defined but never used.","'isLoggedin' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'AuthContext' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'Nav2' is defined but never used.","no-global-assign","no-unsafe-negation"]