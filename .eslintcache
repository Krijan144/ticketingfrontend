[{"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\index.js":"1","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\reportWebVitals.js":"2","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\App.js":"3","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routes.js":"4","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\contextapi\\authContext.js":"5","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routerGuard.js":"6","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\main.js":"7","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\post_answer.js":"8","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\dropdown.js":"9","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\ans_query.js":"10","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\querylist.js":"11","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_button.js":"12","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_answeredlist.js":"13","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\button.js":"14","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header2.js":"15","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\login.js":"16","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\queryform.js":"17","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\getanswer.js":"18","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header.js":"19","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\register.js":"20","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_querylist.js":"21","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_register.js":"22","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_role.js":"23","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_query.js":"24","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_login.js":"25","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antrole.js":"26","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antstaff.js":"27","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\anttickets.js":"28","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antcustomer.js":"29"},{"size":561,"mtime":1610466567648,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1610466567649,"results":"32","hashOfConfig":"31"},{"size":245,"mtime":1613023639450,"results":"33","hashOfConfig":"31"},{"size":3240,"mtime":1617616401603,"results":"34","hashOfConfig":"31"},{"size":680,"mtime":1613312530507,"results":"35","hashOfConfig":"31"},{"size":389,"mtime":1613730110080,"results":"36","hashOfConfig":"31"},{"size":392,"mtime":1612690886686,"results":"37","hashOfConfig":"31"},{"size":2521,"mtime":1612690886686,"results":"38","hashOfConfig":"31"},{"size":1673,"mtime":1612690886683,"results":"39","hashOfConfig":"31"},{"size":2343,"mtime":1612690886679,"results":"40","hashOfConfig":"31"},{"size":2870,"mtime":1612690886687,"results":"41","hashOfConfig":"31"},{"size":13137,"mtime":1613286720648,"results":"42","hashOfConfig":"31"},{"size":1680,"mtime":1610690713775,"results":"43","hashOfConfig":"31"},{"size":4858,"mtime":1617604460763,"results":"44","hashOfConfig":"31"},{"size":1225,"mtime":1610466567643,"results":"45","hashOfConfig":"31"},{"size":3669,"mtime":1613023639453,"results":"46","hashOfConfig":"31"},{"size":3939,"mtime":1613040431571,"results":"47","hashOfConfig":"31"},{"size":1527,"mtime":1612690886683,"results":"48","hashOfConfig":"31"},{"size":2081,"mtime":1612690886684,"results":"49","hashOfConfig":"31"},{"size":4564,"mtime":1612690886689,"results":"50","hashOfConfig":"31"},{"size":5547,"mtime":1612690886690,"results":"51","hashOfConfig":"31"},{"size":4694,"mtime":1613109669045,"results":"52","hashOfConfig":"31"},{"size":2970,"mtime":1613023639466,"results":"53","hashOfConfig":"31"},{"size":615,"mtime":1613023639457,"results":"54","hashOfConfig":"31"},{"size":4253,"mtime":1613023639456,"results":"55","hashOfConfig":"31"},{"size":3934,"mtime":1613284477197,"results":"56","hashOfConfig":"31"},{"size":5880,"mtime":1613295836211,"results":"57","hashOfConfig":"31"},{"size":6463,"mtime":1613316108050,"results":"58","hashOfConfig":"31"},{"size":5415,"mtime":1613297042579,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1wo6m60",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"62"},"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\index.js",[],["135","136"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\reportWebVitals.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\App.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routes.js",["137"],"import React, { useContext } from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport queryform from \"./components/queryform\";\r\nimport postanswer from \"./components/post_answer\";\r\nimport getanswer from \"./components/getanswer\";\r\nimport Login from \"./components/login\";\r\nimport Nav1 from \"./components/header\";\r\nimport home from \"./components/main\";\r\nimport querylist from \"./components/querylist\";\r\nimport ans_query from \"./components/ans_query\";\r\nimport dropdown from \"./components/dropdown\";\r\nimport register from \"./components/register\";\r\nimport RouterGuard from \"./routerGuard\";\r\nimport { AuthContext } from \"./contextapi/authContext\";\r\nimport st_button from \"./components/st_button\";\r\nimport st_answeredlist from \"./components/st_answeredlist\";\r\nimport st_querylist from \"./components/st_querylist\";\r\nimport st_register from \"./components/st_register\";\r\nimport st_role from \"./components/st_role\";\r\nimport st_query from \"./components/st_query\";\r\nimport st_login from \"./components/st_login\";\r\nimport antstaff from \"./components/antstaff\";\r\nimport antticket from \"./components/anttickets\";\r\nimport button from \"./components/button\";\r\nimport antcustomer from \"./components/antcustomer\";\r\n\r\nconst Routes = () => {\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      {isLoggedin ? <Nav1 /> : null}\r\n\r\n      <RouterGuard\r\n        path=\"/queryform\"\r\n        exact\r\n        component={queryform}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/postanswer/:id\"\r\n        exact\r\n        component={postanswer}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <Route path=\"/getanswer/:id\" exact component={getanswer} />\r\n      <Route\r\n        path=\"/login\"\r\n        exact\r\n        component={Login}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/\"\r\n        exact\r\n        component={home}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <RouterGuard\r\n        path=\"/button\"\r\n        exact\r\n        component={button}\r\n        auth={!isLoggedin}\r\n        redirect=\"/login\"\r\n      />\r\n      <Route path=\"/st_querylist/\" exact component={st_querylist} />\r\n      <Route path=\"/st_answeredlist/\" exact component={st_answeredlist} />\r\n      <Route path=\"/st_button/\" exact component={st_button} />\r\n      <Route path=\"/st_register\" exact component={st_register} />\r\n      <Route path=\"/st_role\" exact component={st_role} />\r\n      <Route path=\"/st_login\" exact component={st_login} />\r\n      <Route path=\"/st_query\" exact component={st_query} />\r\n      <Route path=\"/dropdown\" exact component={dropdown} />\r\n      <Route path=\"/register\" exact component={register} />\r\n      <Route path=\"/querylist\" exact component={querylist} />\r\n      <Route path=\"/antstaff\" exact component={antstaff} />\r\n      <Route path=\"/antcustomer\" exact component={antcustomer} />\r\n      <Route path=\"/anttickets\" exact component={antticket} />\r\n      <Route path=\"/ans_query\" exact component={ans_query} />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\contextapi\\authContext.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\routerGuard.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\main.js",["138","139"],"import React, { useContext } from 'react';\r\nimport { AuthContext } from '../contextapi/authContext';\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [user, setUser] = useContext(AuthContext).uso;\r\n\r\n    return (\r\n        <div className=\"container mt-5 text-center welcome\" >\r\n            <h1 >WELCOME </h1>\r\n            <h3>We are here to help.</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;\r\n\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\post_answer.js",["140","141"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport querylist from \"./querylist\";\r\nimport { AuthContext } from \"../contextapi/authContext\"\r\nimport { Button } from \"react-bootstrap\"\r\n\r\nclass postanswer extends Component {\r\n    static contextType = AuthContext\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            answer: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({ [event.target.getAttribute(\"name\")]: event.target.value });\r\n    }\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(this.props);\r\n        const id = this.props.match.params.id;\r\n\r\n        axios({\r\n\r\n            url: `http://localhost:8000/api/answer/${id}`,\r\n            method: \"POST\",\r\n            data: this.state,\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then(response => {\r\n            console.log(response)\r\n            if (window.confirm(\"Your Answer to the query has been Submitted!\")) {\r\n                window.location.href = \"/st_button\";\r\n            }\r\n        })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n    render() {\r\n        console.log(this.props.match.params.id)\r\n        console.log(this.props.location.aboutProps.user)\r\n        const query = this.props.location.aboutProps.query;\r\n        const queryID = this.props.match.params.id;\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"container my-4\">\r\n                    <h2>Answering Form</h2>\r\n                    Query:<br />\r\n                    <b>{query}</b>\r\n                    <form onSubmit={this.handleSubmit} className=\"mt-3\">\r\n                        <label>\r\n                            Answer:<br />\r\n                            <textarea type=\"text\" rows=\"4\" cols=\"50\" name=\"answer\" value={this.state.answer} onChange={this.handleChange} />\r\n                            <br />\r\n                            {/* Userid: */}\r\n                            {/* <input type=\"text\" name=\"query\" value={queryID} onChange={this.handleChange} /> */}\r\n                            <Button variant=\"success\" type=\"Submit\">Submit</Button>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default postanswer","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\dropdown.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\ans_query.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\querylist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_button.js",["142","143","144","145","146","147","148"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\n// import { Button } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Doughnut, Bar, Line } from \"react-chartjs-2\";\r\nimport { Drawer, Form, Button, Col, Row, Input, Select, Alert } from \"antd\";\r\nimport { PlusOutlined, TeamOutlined, FormOutlined } from \"@ant-design/icons\";\r\nimport Antrole from \"./antrole\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nconst { Option } = Select;\r\nconst St_button = () => {\r\n  const [state, setState] = useState({ visible: false });\r\n  const [dtrue, setTrue] = useState([]);\r\n  const [dfalse, setFalse] = useState([]);\r\n  const [qrole, setRole] = useState([]);\r\n  const [Qrole, setQRole] = useState([]);\r\n  const [fullname, setFullname] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [passwordCheck, setPasswordcheck] = useState();\r\n  const [role, setRole2] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/query/true`).then((res) => {\r\n      setTrue(res.data.data.length);\r\n    });\r\n    axios.get(`http://localhost:8000/api/query/false`).then((res) => {\r\n      setFalse(res.data.data.length);\r\n    });\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      setRole(res.data);\r\n    });\r\n    axios.get(`http://localhost:8000/api/query`).then((res) => {\r\n      console.log(res);\r\n      setQRole(res.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleButton1 = () => {\r\n    window.location.href = \"/st_answeredlist\";\r\n  };\r\n  const handleButton2 = () => {\r\n    window.location.href = \"/st_querylist\";\r\n  };\r\n  //antdesign\r\n  const showDrawer = () => {\r\n    setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const validateMessages = {\r\n    required: \"${label} is required!\",\r\n    types: {\r\n      email: \"${label} is not a valid email!\",\r\n      number: \"${label} is not a valid number!\",\r\n    },\r\n  };\r\n\r\n  const onFinish = (e) => {\r\n    console.log(role, \"1\");\r\n    console.log(fullname);\r\n    console.log(email);\r\n    console.log(password);\r\n    console.log(passwordCheck);\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/stregister\",\r\n      method: \"POST\",\r\n      data: { email, password, passwordCheck, fullname, role },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setSubmitted(true);\r\n        setShow(false);\r\n      })\r\n      .catch((err) => {\r\n        setShow(show == true);\r\n        console.log(err.response.data.msg);\r\n\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n        console.log(show);\r\n      });\r\n  };\r\n\r\n  //antdesign\r\n\r\n  const doughnut = {\r\n    data: {\r\n      labels: [\"Answered\", \"Not Answered\"],\r\n\r\n      datasets: [\r\n        {\r\n          backgroundColor: [\"#5cb85c\", \"#d9534f\"],\r\n          data: [dtrue, dfalse],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      legend: {\r\n        labels: {\r\n          // fontColor: \"white\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n  const dynamic = qrole.map((list) => {\r\n    return list.role;\r\n  });\r\n  const time = Qrole.map((list) => {\r\n    return list.date;\r\n  });\r\n  const type = Qrole.map((list) => {\r\n    // console.log(list, \"list\");\r\n    return list.q_type;\r\n  });\r\n\r\n  var counts = {};\r\n  type.forEach(function (x) {\r\n    counts[x] = (counts[x] || 0) + 1;\r\n  });\r\n  const Dynamic = counts.dynamic;\r\n  const Technical = counts.Technical;\r\n  const Management = counts.Management;\r\n  const Cleanup = counts.Cleanup;\r\n  const Refunds = counts.Refunds;\r\n  // const undefined = counts.undefined;\r\n  // console.log(counts.Management);\r\n  // const data = Qrole.map(list);\r\n  const bar = {\r\n    data: {\r\n      labels: dynamic,\r\n\r\n      datasets: [\r\n        {\r\n          backgroundColor: [\"red\", \"#36a2eb\", \"#eb1796\", \"green\"],\r\n\r\n          data: [Cleanup, Management, Refunds, Technical],\r\n        },\r\n      ],\r\n    },\r\n    options: {\r\n      legend: {\r\n        // fontColor: \"white\",\r\n      },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              //fontColor: \"white\",\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n  const line = {\r\n    labels: [\"a\"],\r\n    datasets: [\r\n      {\r\n        backgroundColor: [\"white\", \"#36a2eb\", \"#eb1796\", \"green\"],\r\n\r\n        data: time,\r\n      },\r\n    ],\r\n\r\n    options: {\r\n      maintainAspectRatio: false,\r\n      responsive: true,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            type: \"time\",\r\n            time: {\r\n              parser: \"YYYY-MM-DDTHH:mm:ss.458Z\",\r\n              unit: \"minute\",\r\n              displayFormats: {\r\n                minute: \"YYYY-MM-DDTHH:mm:ss.458Z\",\r\n                hour: \"YYYY-MM-DD HH:mm:ss\",\r\n              },\r\n            },\r\n            ticks: {\r\n              source: time,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    },\r\n  };\r\n\r\n  // qrole.map((list) => {\r\n  //   console.log(list);\r\n  //   setQRole(list);\r\n  // });\r\n\r\n  return (\r\n    <div className=\"container p-5\">\r\n      <div className=\"text-center my-3\" style={{ color: \"white\" }}>\r\n        <h2>Controller</h2>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\" style={{ width: \"100px\" }}>\r\n          <Doughnut data={doughnut.data} options={doughnut.options} />\r\n        </div>\r\n\r\n        <div className=\"col-sm\" style={{ width: \"100px\" }}>\r\n          <Bar data={bar.data} options={bar.options} />\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <div style={{ height: \"250px\" }}>\r\n        <Line data={line} options={line.options} />\r\n      </div>\r\n      <div className=\"text-center my-5\">\r\n        <br />\r\n        <br />\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col col-lg-2\">\r\n            <Antrole />\r\n          </div>\r\n\r\n          <div className=\"col col-lg-2\">\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ height: \"60px\" }}\r\n              onClick={showDrawer}\r\n            >\r\n              <PlusOutlined theme=\"outlined\" /> New Agent\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-md-center my-4\">\r\n          <div className=\"col col-lg-2\">\r\n            <Link to=\"/antstaff\">\r\n              <Button type=\"primary\" style={{ height: \"60px\", width: \"130px\" }}>\r\n                <TeamOutlined />\r\n                Agents\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col col-lg-2\">\r\n            <Link to=\"/anttickets\">\r\n              <Button type=\"primary\" style={{ height: \"60px\", width: \"130px\" }}>\r\n                <FormOutlined />\r\n                Tickets\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n          <div className=\"col col-lg-2\">\r\n            <Link to=\"/antcustomer\">\r\n              <Button type=\"primary\" style={{ height: \"60px\", width: \"130px\" }}>\r\n                <TeamOutlined />\r\n                Customers\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n\r\n        <br />\r\n\r\n        {/* ant design */}\r\n\r\n        <Drawer\r\n          title=\"Create a new agent account\"\r\n          width={650}\r\n          onClose={onClose}\r\n          visible={state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n          footer={\r\n            <div\r\n              style={{\r\n                textAlign: \"right\",\r\n              }}\r\n            >\r\n              <Button onClick={onClose} style={{ marginRight: 8 }}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          }\r\n        >\r\n          {show ? (\r\n            // <Alert description={error} type=\"error\" showIcon closable />\r\n            <Alert type=\"error\" message={error} banner />\r\n          ) : null}\r\n          {submitted && (\r\n            // <Alert description={error} type=\"error\" showIcon closable />\r\n            <Alert\r\n              type=\"success\"\r\n              message=\"Agent successfully registered\"\r\n              banner\r\n            />\r\n          )}\r\n          <Form\r\n            layout=\"vertical\"\r\n            hideRequiredMark\r\n            validateMessages={validateMessages}\r\n            onFinish={onFinish}\r\n          >\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  onChange={(e) => {\r\n                    setEmail(e.target.value);\r\n                  }}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      type: \"email\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Please enter email\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"fullname\"\r\n                  label=\"UserName\"\r\n                  onChange={(e) => {\r\n                    setFullname(e.target.value);\r\n                  }}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Input placeholder=\"Please enter username\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"role\"\r\n                  label=\"Role\"\r\n                  rules={[{ required: true, message: \"Please select a Role\" }]}\r\n                >\r\n                  <Select\r\n                    onChange={(e) => {\r\n                      console.log(e);\r\n                      setRole2(e);\r\n                    }}\r\n                    placeholder=\"Please select a agent role\"\r\n                  >\r\n                    {qrole.map((list) => {\r\n                      return (\r\n                        <Option value={list.role} id={list.id}>\r\n                          {list.role}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}></Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  onChange={(e) => {\r\n                    console.log(e);\r\n                    setPassword(e.target.value);\r\n                  }}\r\n                  rules={[{ required: true, message: \"Please enter password\" }]}\r\n                >\r\n                  <Input placeholder=\"Please enter password\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"re-password\"\r\n                  label=\"Re-type Password\"\r\n                  onChange={(e) => {\r\n                    setPasswordcheck(e.target.value);\r\n                  }}\r\n                  rules={[{ required: true, message: \"Re-type Password\" }]}\r\n                >\r\n                  <Input placeholder=\"Re-type Password\" />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name=\"approver\"\r\n                  label=\"Approver\"\r\n                  rules={[\r\n                    { required: true, message: \"Please choose the approver\" },\r\n                  ]}\r\n                >\r\n                  <Select placeholder=\"Please choose the approver\">\r\n                    <Option value=\"jack\">Jack Ma</Option>\r\n                    <Option value=\"tom\">Tom Liu</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}></Col>\r\n            </Row>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Drawer>\r\n        {/* Ant design */}\r\n        <br />\r\n        <br />\r\n        {/* <Button variant=\"success\" onClick={handleButton1}>\r\n          Answered Query\r\n        </Button>\r\n        {\"  \"}\r\n        <Button variant=\"danger\" onClick={handleButton2}>\r\n          To be answered\r\n        </Button> */}\r\n      </div>\r\n      <div className=\"text-center my-5\">\r\n        {/* <Link to=\"/st_register\">\r\n          <Button variant=\"success\">Staff Register</Button>\r\n        </Link>\r\n      </div>\r\n      <div className=\"text-center my-5\">\r\n        <Link to=\"/st_role\">\r\n          <Button variant=\"success\">Add Role</Button>\r\n        </Link> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default St_button;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_answeredlist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\button.js",["149","150","151"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tabs, Table, Tag, Modal } from \"antd\";\r\nimport { ClockCircleOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nconst { TabPane } = Tabs;\r\n\r\nconst Button = () => {\r\n  const [fquery, setFQuery] = useState([]);\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  const [data, setData] = useState([]);\r\n  const [type, setType] = useState([]);\r\n  const [answer, setAnswer] = useState();\r\n  const [visible, setVisible] = useState(false);\r\n  const userID = user.user.id;\r\n  const columns = [\r\n    {\r\n      title: \"Query\",\r\n      dataIndex: \"query\",\r\n\r\n      width: \"70%\",\r\n    },\r\n    {\r\n      title: \"Type\",\r\n      dataIndex: \"q_type\",\r\n\r\n      width: \"20%\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: \"20%\",\r\n      render: (text, record) => (\r\n        <Tag\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => {\r\n            handleClick(record._id);\r\n          }}\r\n        >\r\n          Detail\r\n        </Tag>\r\n      ),\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    console.log(user);\r\n    const id = userID;\r\n    const token = user.token;\r\n    axios\r\n      .get(`http://localhost:8000/api/query/falsequery/${id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.data);\r\n        const query = res.data.data;\r\n        setFQuery(query);\r\n      });\r\n    axios.get(`http://localhost:8000/api/query/truequery/${id}`).then((res) => {\r\n      console.log(res.data);\r\n      setData(res.data.data);\r\n      //   const ansd_query = res.data.data;\r\n      //   this.setState({ ansd_query });\r\n    });\r\n\r\n    axios.get(`http://localhost:8000/api/query/q_role/`).then((res) => {\r\n      console.log(res.data);\r\n      setType(res.data);\r\n      //   const ansd_query = res.data.data;\r\n      //   this.setState({ ansd_query });\r\n    });\r\n  }, []);\r\n  const handleClick = (e) => {\r\n    console.log(e);\r\n    axios.get(`http://localhost:8000/api/answer/${e}`).then((res) => {\r\n      console.log(res.data, \"hello\");\r\n      setAnswer(res.data);\r\n      setVisible(true);\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"container my-4\">\r\n      <Tabs defaultActiveKey=\"2\">\r\n        <TabPane\r\n          tab={\r\n            <span>\r\n              <ClockCircleOutlined />\r\n              Pending\r\n            </span>\r\n          }\r\n          key=\"1\"\r\n        >\r\n          <Modal\r\n            title=\"Details\"\r\n            centered\r\n            visible={visible}\r\n            onOk={() => setVisible(false)}\r\n            onCancel={() => setVisible(false)}\r\n            width={1000}\r\n            footer={[]}\r\n          >\r\n            <p>\r\n              <b>Query: </b>\r\n\r\n              {fquery.query}\r\n            </p>\r\n            <p>\r\n              <b>Ellaborate</b>\r\n              <br />\r\n              {fquery.ellaborate}\r\n            </p>\r\n            <p>\r\n              <b>Answer:</b>\r\n              <br />\r\n              {answer?.answer}\r\n            </p>\r\n\r\n            <p>\r\n              <b>Answered by:</b>\r\n            </p>\r\n          </Modal>\r\n          {/* {fquery.map((list) => {\r\n            return <p>{list.query}</p>;\r\n          })} */}\r\n          <Table\r\n            columns={columns}\r\n            // expandable={{\r\n            //   expandedRowRender: (record) => (\r\n            //     <p style={{ margin: 0 }}>{record.ellaborate}</p>\r\n            //   ),\r\n            // }}\r\n            dataSource={fquery}\r\n            //onChange={this.handleTableChange}\r\n          />\r\n        </TabPane>\r\n        <TabPane\r\n          tab={\r\n            <span>\r\n              <CheckCircleOutlined />\r\n              Answered\r\n            </span>\r\n          }\r\n          key=\"2\"\r\n        >\r\n          <Table\r\n            columns={columns}\r\n            // expandable={{\r\n            //   expandedRowRender: (record) => (\r\n            //     <p style={{ margin: 0 }}>{record.ellaborate}</p>\r\n            //   ),\r\n            // }}\r\n            dataSource={data}\r\n            //onChange={this.handleTableChange}\r\n          />\r\n        </TabPane>\r\n      </Tabs>\r\n      <Modal\r\n        title=\"Details\"\r\n        centered\r\n        visible={visible}\r\n        onOk={() => setVisible(false)}\r\n        onCancel={() => setVisible(false)}\r\n        width={1000}\r\n        footer={[]}\r\n      >\r\n        <p>\r\n          <b>Query: </b>\r\n\r\n          {data.query}\r\n        </p>\r\n        <p>\r\n          <b>Ellaborate</b>\r\n          <br />\r\n          {data.ellaborate}\r\n        </p>\r\n        <p>\r\n          <b>Answer:</b>\r\n          <br />\r\n          {answer?.answer}\r\n        </p>\r\n\r\n        <p>\r\n          <b>Answered by:</b>\r\n        </p>\r\n      </Modal>\r\n      ,\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header2.js",["152","153"],"import React,{Component} from 'react';\r\nimport {Navbar,NavDropdown,Form,FormControl,Nav,Button} from 'react-bootstrap';\r\n\r\nclass Nav2 extends Component{\r\n\r\n    render(){return(\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#home\">TECHRIDA STAFF</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"/\">Home</Nav.Link>\r\n                <Nav.Link href=\"/queryform\">SubmitQuery</Nav.Link>\r\n                <Nav.Link href=\"/querylist\">QueryList</Nav.Link>\r\n                <NavDropdown title=\"Account\" id=\"basic-nav-dropdown\" >\r\n                    <NavDropdown.Item href=\"/login\">Login</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/register\">Register</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"#action/3.4\">Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n                </Nav>\r\n                <Form inline>\r\n                \r\n                </Form>\r\n            </Navbar.Collapse>\r\n            </Navbar>\r\n\r\n    )}\r\n}\r\n\r\nexport default Nav2",["154","155"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\login.js",["156","157","158","159"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst Login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/login/\",\r\n      method: \"POST\",\r\n      data: { email, password },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response, \"response from login\");\r\n        const { token, user } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setUser({\r\n          token: localStorage.getItem(\"token\"),\r\n          user: JSON.parse(localStorage.getItem(\"user\")),\r\n        });\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n        setIsLoggedin(true);\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! You are logged in.</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">LOGIN</h3>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n          <Link to=\"/register\" style={{ fontSize: \"12px\" }}>\r\n            Don't have an account ? Register\r\n          </Link>{\" \"}\r\n          <br />\r\n          <Link to=\"/st_login\" style={{ fontSize: \"12px\" }}>\r\n            Staff Login\r\n          </Link>{\" \"}\r\n          <br /> <br />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\queryform.js",["160","161"],"import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"./css/askQuery.css\";\r\n\r\nclass Queryform extends Component {\r\n  static contextType = AuthContext;\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      q_role: [],\r\n      formData: {\r\n        query: \"\",\r\n        ellaborate: \"\",\r\n\r\n        q_type: \"\",\r\n      },\r\n      submitted: false,\r\n    };\r\n\r\n    //this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.context.uso[0]?.user.id;\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      const role = res.data;\r\n      console.log(role);\r\n      this.setState({ q_role: role });\r\n    });\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState((prev) => ({\r\n      formData: {\r\n        ...prev.formData,\r\n        [event.target.getAttribute(\"name\")]: event.target.value,\r\n      },\r\n    }));\r\n    console.log(this.context.uso[0].user);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    console.log(this.context.uso[0].user.id);\r\n    const id = this.context.uso[0]?.user.id;\r\n    const token = this.context.uso[0].token;\r\n    console.log(this.state);\r\n    axios({\r\n      url: `http://localhost:8000/api/query/${id}`,\r\n      method: \"POST\",\r\n      data: this.state.formData,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          submitted: true,\r\n        });\r\n        // this.setState((p) => ({\r\n        //   formData: { ...p.formData, query: \"\", ellaborate: \"\" },\r\n        // }));\r\n        // console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    //const {name} = this.context;\r\n    //console.log(name)\r\n\r\n    return (\r\n      <div className=\"container p-5 col-lg-5 col-md-5 offset-md-4 askQuery mt-5\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          {this.state.submitted && (\r\n            <Alert variant=\"success\">\r\n              Success! Your problem will be noticed fast.\r\n            </Alert>\r\n          )}\r\n          <h3 className=\"my-3 text-center\">SUBMIT YOUR QUERIES</h3>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label>Select Type</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={this.state.formData.q_type}\r\n              name=\"q_type\"\r\n              onChange={this.handleChange}\r\n            >\r\n              {/* <option selected>Open this select type</option> */}\r\n              {this.state.q_role.map((list) => {\r\n                return <option id={list.id}>{list.role}</option>;\r\n              })}\r\n              {/* <option></option> */}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n            <Form.Label>Query</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"query\"\r\n              value={this.state.formData.query}\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n            <Form.Label>Ellaborate</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              value={this.state.formData.ellaborate}\r\n              rows=\"5\"\r\n              name=\"ellaborate\"\r\n              onChange={this.handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Queryform;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\getanswer.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\header.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\register.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_querylist.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_register.js",["162"],"import React, { Component } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./css/register.css\";\r\n\r\nclass register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullname: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      passwordCheck: \"\",\r\n      q_role: [],\r\n      role: \"\",\r\n      show: false,\r\n      error: \"\",\r\n      submitted: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res);\r\n      console.log(res.data);\r\n      const role = res.data;\r\n      console.log(role);\r\n      this.setState({ q_role: role });\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios({\r\n      url: \"http://localhost:8000/users/stregister\",\r\n      method: \"POST\",\r\n      data: this.state,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        this.setState({\r\n          fullname: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          passwordCheck: \"\",\r\n          role: \"\",\r\n          submitted: true,\r\n          show: false,\r\n        });\r\n        console.log(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        this.setState({\r\n          show: true,\r\n          error: err.response.data.msg,\r\n        });\r\n      });\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.getAttribute(\"name\")]: event.target.value });\r\n    console.log(this.state.role);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"col-lg-5 col-md-5  offset-md-4 my-5 register\">\r\n          {this.state.show ? (\r\n            <Alert variant=\"danger\">{this.state.error}</Alert>\r\n          ) : null}\r\n          {this.state.submitted && (\r\n            <Alert variant=\"success\">\r\n              Success! You are successfully registered.\r\n            </Alert>\r\n          )}\r\n          <h3 className=\"text-center my-5\">REGISTER STAFF</h3>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicUsername\">\r\n              <Form.Label>Username</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"username\"\r\n                name=\"fullname\"\r\n                value={this.state.fullname}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Re-type Password\"\r\n                name=\"passwordCheck\"\r\n                value={this.state.passwordCheck}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={this.state.value}\r\n                onChange={(e) => {\r\n                  this.setState({ role: e.target.value });\r\n                }}\r\n              >\r\n                {this.state.q_role.map((list) => {\r\n                  return <option id={list.id}>{list.role}</option>;\r\n                })}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <br /> <br />\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Register\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default register;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_role.js",["163","164","165","166"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst Role = (props) => {\r\n  const [role, setRole] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [qrole, setQrole] = useState([]);\r\n\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8000/api/query/q_role/\").then((res) => {\r\n      console.log(res);\r\n      setQrole(res.data);\r\n    });\r\n  }, []);\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/api/query/q_role/\",\r\n      method: \"POST\",\r\n      data: { role },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! New role admitted</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">Enter New Role</h3>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm\">\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter New Role\"\r\n                  name=\"email\"\r\n                  value={role}\r\n                  onChange={(e) => setRole(e.target.value)}\r\n                />\r\n              </Form.Group>\r\n              {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n              <br /> <br />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <h4>Registered role</h4>\r\n            {qrole.map((list) => {\r\n              return <ol>{list.role}</ol>;\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Role;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_query.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\st_login.js",["167","168","169","170"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Form, Button, Alert, Modal } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../contextapi/authContext\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport \"./css/login.css\";\r\n\r\nconst St_login = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [q_role, setQRole] = useState([]);\r\n  const [role, setRole] = useState();\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isLoggedin, setIsLoggedin] = useContext(AuthContext).login;\r\n  // const [isAdmin, setIsAdmin] = useContext(AuthContext).is_admin;\r\n\r\n  const [user, setUser] = useContext(AuthContext).uso;\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/api/query/q_role`).then((res) => {\r\n      console.log(res.data, \"ok\");\r\n      setQRole(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/st_login/\",\r\n      method: \"POST\",\r\n      data: { email, password, role },\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response, \"response from login\");\r\n        const { token, user } = response.data;\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        setUser({\r\n          token: localStorage.getItem(\"token\"),\r\n          user: JSON.parse(localStorage.getItem(\"user\")),\r\n        });\r\n        // setIsAdmin(user.user?.role === 'admin')\r\n        setIsLoggedin(true);\r\n        setSubmitted(true);\r\n        setShow(false);\r\n        history.push(\"/\");\r\n        // window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.response.data.msg);\r\n        setShow(true);\r\n        setError(err.response.data.msg);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container p-5 mt-5\">\r\n      <div className=\"col-lg-5 offset-md-4 login mt-5\">\r\n        {show ? <Alert variant=\"danger\">{error}</Alert> : null}\r\n        {submitted && (\r\n          <Alert variant=\"success\">Success! You are logged in.</Alert>\r\n        )}\r\n\r\n        <h3 className=\"text-center my-5\">STAFF LOGIN</h3>\r\n\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n            <Form.Label>Select Type</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"q_type\"\r\n              value={role}\r\n              onChange={(e) => setRole(e.target.value)}\r\n            >\r\n              {/* <option selected>Open this select type</option> */}\r\n              {q_role.map((list) => {\r\n                return <option id={list.id}>{list.role}</option>;\r\n              })}\r\n              {/* <option></option> */}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          {/* <Form.Group controlId=\"formBasicCheckbox\">\r\n                        <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n                    </Form.Group> */}\r\n\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default St_login;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antrole.js",["171","172","173","174","175"],"import React, { useEffect, useState } from \"react\";\r\nimport { Drawer, Button, Form, Col, Row, Input, Select, Space } from \"antd\";\r\nimport axios from \"axios\";\r\nimport {\r\n  MinusCircleOutlined,\r\n  PlusOutlined,\r\n  DeleteFilled,\r\n} from \"@ant-design/icons\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nconst { Option } = Select;\r\nconst Antrole = () => {\r\n  const [state, setState] = useState({ visible: false, childrenDrawer: false });\r\n  const [qrole, setRole] = useState([]);\r\n  const [role, setRoles] = useState([]);\r\n  const [refresh, setRefresh] = useState(false);\r\n  const showDrawer = () => {\r\n    setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  const onFinish = (e) => {\r\n    console.log(e.users);\r\n    axios({\r\n      url: \"http://localhost:8000/api/query/q_role/\",\r\n      method: \"POST\",\r\n      data: e.users,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }).then(setRefresh(true));\r\n  };\r\n  const handleDelete = (e) => {\r\n    console.log(e, \"delete\");\r\n    axios({\r\n      url: \"http://localhost:8000/api/query/q_role\",\r\n      method: \"DELETE\",\r\n      data: {\r\n        role: e,\r\n      },\r\n    }).then(setRefresh(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:8000/api/query/q_role`)\r\n      .then((res) => {\r\n        setRole(res.data);\r\n      })\r\n      .then(setRefresh(false));\r\n  }, [refresh]);\r\n  return (\r\n    <div>\r\n      <Button type=\"primary\" onClick={showDrawer} style={{ height: \"60px\" }}>\r\n        <PlusOutlined theme=\"outlined\" />\r\n        Agent Roles\r\n      </Button>\r\n      <Drawer\r\n        title=\"Roles\"\r\n        width={520}\r\n        closable={false}\r\n        onClose={onClose}\r\n        visible={state.visible}\r\n      >\r\n        {qrole.map((list) => {\r\n          return (\r\n            <>\r\n              <p>\r\n                {list.role}\r\n                <DeleteFilled\r\n                  className=\"float-right\"\r\n                  onClick={() => {\r\n                    handleDelete(list.role);\r\n                  }}\r\n                />\r\n              </p>\r\n            </>\r\n          );\r\n        })}\r\n        <br />\r\n\r\n        <Form\r\n          name=\"dynamic_form_nest_item\"\r\n          onFinish={onFinish}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.List name=\"users\">\r\n            {(fields, { add, remove }) => (\r\n              <>\r\n                {fields.map((field) => (\r\n                  <Space\r\n                    key={field.key}\r\n                    style={{ display: \"flex\", marginBottom: 8 }}\r\n                    align=\"baseline\"\r\n                  >\r\n                    <Form.Item\r\n                      {...field}\r\n                      name={[field.name, \"role\"]}\r\n                      fieldKey={[field.fieldKey, \"role\"]}\r\n\r\n                      // onChange={(e) => {\r\n                      //   console.log(e.target.value);\r\n                      //   setRoles(e.target.value);\r\n                      // }}\r\n\r\n                      // rules={[{ required: true, message: \"Missing last name\" }]}\r\n                    >\r\n                      <Input placeholder=\"Add Role Type\" />\r\n                    </Form.Item>\r\n                    <MinusCircleOutlined onClick={() => remove(field.name)} />\r\n                  </Space>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => add()}\r\n                    block\r\n                    icon={<PlusOutlined />}\r\n                  >\r\n                    Add Roles\r\n                  </Button>\r\n                </Form.Item>\r\n              </>\r\n            )}\r\n          </Form.List>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Antrole;\r\n",["176","177"],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antstaff.js",[],"C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\anttickets.js",["178"],"import React from \"react\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  Popconfirm,\r\n  PageHeader,\r\n  Tag,\r\n  Modal,\r\n} from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport {\r\n  SearchOutlined,\r\n  DeleteOutlined,\r\n  DeleteFilled,\r\n} from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\nclass antticket extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    searchedColumn: \"\",\r\n    data: [],\r\n    visible: false,\r\n    detail: {},\r\n  };\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8000/api/query/\").then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ data: res.data.data });\r\n      //   const ansd_query = res.data.data;\r\n      //   this.setState({ ansd_query });\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  handleTableChange = (filters) => {\r\n    console.log(filters);\r\n  };\r\n  handleDelete = (e) => {\r\n    console.log(e);\r\n    axios({\r\n      url: \"http://localhost:8000/api/query/delquery\",\r\n      method: \"DELETE\",\r\n      data: {\r\n        id: `${e}`,\r\n      },\r\n    }).then((res) => {\r\n      console.log(\"deleted\");\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.detail);\r\n    const columns = [\r\n      {\r\n        title: \"Query\",\r\n        dataIndex: \"query\",\r\n        key: \"query\",\r\n        width: \"50%\",\r\n        ...this.getColumnSearchProps(\"query\"),\r\n      },\r\n      {\r\n        title: \"Answer Status\",\r\n        dataIndex: \"is_answered\",\r\n        key: \"is_answered\",\r\n        width: \"20%\",\r\n        filters: [\r\n          { text: \"True\", value: \"true\" },\r\n          { text: \"False\", value: \"false\" },\r\n        ],\r\n        onFilter: (value, record) => record.is_answered.indexOf(value) === 0,\r\n\r\n        // ...this.getColumnSearchProps(\"is_answered\"),\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        width: \"20%\",\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <Popconfirm\r\n              title=\"Are you sure you want to delete?\"\r\n              onConfirm={() => {\r\n                // console.log(record._id);\r\n\r\n                this.handleDelete(record._id);\r\n              }}\r\n            >\r\n              <DeleteOutlined style={{ color: \"#8b0000\" }} />\r\n            </Popconfirm>\r\n            <Tag\r\n              onClick={() => {\r\n                console.log(record);\r\n                this.setState({ visible: true });\r\n                this.setState({ detail: record });\r\n              }}\r\n            >\r\n              Detail\r\n            </Tag>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container p-4\">\r\n        <PageHeader\r\n          className=\"site-page-header\"\r\n          onBack={() => window.history.back()}\r\n          title=\"Tickets\"\r\n        />\r\n        <Table\r\n          columns={columns}\r\n          // expandable={{\r\n          //   expandedRowRender: (record) => (\r\n          //     <p style={{ margin: 0 }}>{record.ellaborate}</p>\r\n          //   ),\r\n          // }}\r\n          dataSource={this.state.data}\r\n          onChange={this.handleTableChange}\r\n        />\r\n        <Modal\r\n          title=\"Details\"\r\n          centered\r\n          visible={this.state.visible}\r\n          onOk={() => this.setState({ visible: false })}\r\n          onCancel={() => this.setState({ visible: false })}\r\n          width={1000}\r\n          footer={[]}\r\n        >\r\n          <p>\r\n            <b>Query: </b>\r\n\r\n            {this.state.detail.query}\r\n          </p>\r\n\r\n          <p>\r\n            <b>Desciption:</b>\r\n            <br />\r\n            {this.state.detail.ellaborate}\r\n          </p>\r\n          <p>\r\n            <b>Asked by:</b>\r\n          </p>\r\n          <p>\r\n            <b>Answered by:</b>\r\n          </p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n    //dataSource = { data };\r\n  }\r\n}\r\nexport default antticket;\r\n","C:\\Users\\DELL\\ReactProjects\\ticketingfrontend\\src\\components\\antcustomer.js",["179","180"],"import React, { useState, useEffect } from \"react\";\r\nimport { Table, Input, Button, Space, Popconfirm, PageHeader } from \"antd\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport { SearchOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport axios from \"axios\";\r\n\r\n// const data = [\r\n//   {\r\n//     key: \"1\",\r\n//     name: \"John Brown\",\r\n//     age: 32,\r\n//     address: \"New York No. 1 Lake Park\",\r\n//   },\r\n//   {\r\n//     key: \"2\",\r\n//     name: \"Joe Black\",\r\n//     age: 42,\r\n//     address: \"London No. 1 Lake Park\",\r\n//   },\r\n//   {\r\n//     key: \"3\",\r\n//     name: \"Jim Green\",\r\n//     age: 32,\r\n//     address: \"Sidney No. 1 Lake Park\",\r\n//   },\r\n//   {\r\n//     key: \"4\",\r\n//     name: \"Jim Red\",\r\n//     age: 32,\r\n//     address: \"London No. 2 Lake Park\",\r\n//   },\r\n// ];\r\n\r\nclass antcustomer extends React.Component {\r\n  state = {\r\n    searchText: \"\",\r\n    searchedColumn: \"\",\r\n    data: [],\r\n    refresh: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios.get(\"http://localhost:8000/users/user\").then((res) => {\r\n      console.log(res.data);\r\n      this.setState({ data: res.data });\r\n      //   const ansd_query = res.data.data;\r\n      //   this.setState({ ansd_query });\r\n    });\r\n  }\r\n\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  handleDelete = (e) => {\r\n    console.log(e);\r\n\r\n    axios({\r\n      url: \"http://localhost:8000/users/deluser\",\r\n      method: \"DELETE\",\r\n      data: {\r\n        id: `${e}`,\r\n      },\r\n    }).then(() => {\r\n      console.log(\"deleted\");\r\n      this.setState({ refresh: true });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        width: \"30%\",\r\n        ...this.getColumnSearchProps(\"email\"),\r\n      },\r\n      {\r\n        title: \"Username\",\r\n        dataIndex: \"fullname\",\r\n        key: \"fullname\",\r\n        width: \"20%\",\r\n        ...this.getColumnSearchProps(\"fullname\"),\r\n      },\r\n\r\n      {\r\n        title: \"Action\",\r\n        key: \"action\",\r\n        dataIndex: \"_id\",\r\n        width: \"20%\",\r\n\r\n        render: (text, record) => (\r\n          <Space size=\"middle\">\r\n            <Popconfirm\r\n              title=\"Are you sure you want to delete?\"\r\n              onConfirm={() => {\r\n                this.handleDelete(record._id);\r\n              }}\r\n            >\r\n              <DeleteOutlined />\r\n            </Popconfirm>\r\n          </Space>\r\n        ),\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"container p-4\">\r\n        <PageHeader\r\n          className=\"site-page-header\"\r\n          onBack={() => window.history.back()}\r\n          title=\"All Users\"\r\n        />\r\n        <Table columns={columns} dataSource={this.state.data} />\r\n      </div>\r\n    );\r\n    //dataSource = { data };\r\n  }\r\n}\r\nexport default antcustomer;\r\n",{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":28,"column":22,"nodeType":"187","messageId":"188","endLine":28,"endColumn":35},{"ruleId":"185","severity":1,"message":"189","line":7,"column":12,"nodeType":"187","messageId":"188","endLine":7,"endColumn":16},{"ruleId":"185","severity":1,"message":"190","line":7,"column":18,"nodeType":"187","messageId":"188","endLine":7,"endColumn":25},{"ruleId":"185","severity":1,"message":"191","line":3,"column":8,"nodeType":"187","messageId":"188","endLine":3,"endColumn":17},{"ruleId":"185","severity":1,"message":"192","line":49,"column":15,"nodeType":"187","messageId":"188","endLine":49,"endColumn":22},{"ruleId":"185","severity":1,"message":"193","line":42,"column":9,"nodeType":"187","messageId":"188","endLine":42,"endColumn":22},{"ruleId":"185","severity":1,"message":"194","line":45,"column":9,"nodeType":"187","messageId":"188","endLine":45,"endColumn":22},{"ruleId":"195","severity":1,"message":"196","line":62,"column":15,"nodeType":"197","messageId":"198","endLine":62,"endColumn":38},{"ruleId":"195","severity":1,"message":"196","line":64,"column":14,"nodeType":"197","messageId":"198","endLine":64,"endColumn":46},{"ruleId":"195","severity":1,"message":"196","line":65,"column":15,"nodeType":"197","messageId":"198","endLine":65,"endColumn":48},{"ruleId":"199","severity":1,"message":"200","line":89,"column":22,"nodeType":"201","messageId":"202","endLine":89,"endColumn":24},{"ruleId":"185","severity":1,"message":"203","line":134,"column":9,"nodeType":"187","messageId":"188","endLine":134,"endColumn":16},{"ruleId":"185","severity":1,"message":"190","line":10,"column":16,"nodeType":"187","messageId":"188","endLine":10,"endColumn":23},{"ruleId":"185","severity":1,"message":"204","line":12,"column":10,"nodeType":"187","messageId":"188","endLine":12,"endColumn":14},{"ruleId":"205","severity":1,"message":"206","line":73,"column":6,"nodeType":"207","endLine":73,"endColumn":8,"suggestions":"208"},{"ruleId":"185","severity":1,"message":"209","line":2,"column":33,"nodeType":"187","messageId":"188","endLine":2,"endColumn":44},{"ruleId":"185","severity":1,"message":"210","line":2,"column":49,"nodeType":"187","messageId":"188","endLine":2,"endColumn":55},{"ruleId":"181","replacedBy":"211"},{"ruleId":"183","replacedBy":"212"},{"ruleId":"185","severity":1,"message":"213","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},{"ruleId":"185","severity":1,"message":"214","line":3,"column":31,"nodeType":"187","messageId":"188","endLine":3,"endColumn":36},{"ruleId":"185","severity":1,"message":"215","line":14,"column":10,"nodeType":"187","messageId":"188","endLine":14,"endColumn":20},{"ruleId":"185","severity":1,"message":"189","line":17,"column":10,"nodeType":"187","messageId":"188","endLine":17,"endColumn":14},{"ruleId":"185","severity":1,"message":"216","line":28,"column":11,"nodeType":"187","messageId":"188","endLine":28,"endColumn":13},{"ruleId":"217","severity":1,"message":"218","line":121,"column":15,"nodeType":"219","endLine":121,"endColumn":23},{"ruleId":"185","severity":1,"message":"220","line":3,"column":10,"nodeType":"187","messageId":"188","endLine":3,"endColumn":14},{"ruleId":"185","severity":1,"message":"214","line":3,"column":31,"nodeType":"187","messageId":"188","endLine":3,"endColumn":36},{"ruleId":"185","severity":1,"message":"220","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":26},{"ruleId":"185","severity":1,"message":"189","line":17,"column":10,"nodeType":"187","messageId":"188","endLine":17,"endColumn":14},{"ruleId":"185","severity":1,"message":"190","line":17,"column":16,"nodeType":"187","messageId":"188","endLine":17,"endColumn":23},{"ruleId":"185","severity":1,"message":"214","line":3,"column":31,"nodeType":"187","messageId":"188","endLine":3,"endColumn":36},{"ruleId":"185","severity":1,"message":"220","line":5,"column":22,"nodeType":"187","messageId":"188","endLine":5,"endColumn":26},{"ruleId":"185","severity":1,"message":"215","line":16,"column":10,"nodeType":"187","messageId":"188","endLine":16,"endColumn":20},{"ruleId":"185","severity":1,"message":"189","line":19,"column":10,"nodeType":"187","messageId":"188","endLine":19,"endColumn":14},{"ruleId":"185","severity":1,"message":"221","line":2,"column":32,"nodeType":"187","messageId":"188","endLine":2,"endColumn":35},{"ruleId":"185","severity":1,"message":"222","line":2,"column":37,"nodeType":"187","messageId":"188","endLine":2,"endColumn":40},{"ruleId":"185","severity":1,"message":"223","line":11,"column":9,"nodeType":"187","messageId":"188","endLine":11,"endColumn":15},{"ruleId":"185","severity":1,"message":"224","line":15,"column":10,"nodeType":"187","messageId":"188","endLine":15,"endColumn":14},{"ruleId":"185","severity":1,"message":"225","line":15,"column":16,"nodeType":"187","messageId":"188","endLine":15,"endColumn":24},{"ruleId":"181","replacedBy":"226"},{"ruleId":"183","replacedBy":"227"},{"ruleId":"185","severity":1,"message":"228","line":16,"column":3,"nodeType":"187","messageId":"188","endLine":16,"endColumn":15},{"ruleId":"185","severity":1,"message":"229","line":1,"column":17,"nodeType":"187","messageId":"188","endLine":1,"endColumn":25},{"ruleId":"185","severity":1,"message":"213","line":1,"column":27,"nodeType":"187","messageId":"188","endLine":1,"endColumn":36},"no-native-reassign",["230"],"no-negated-in-lhs",["231"],"no-unused-vars","'setIsLoggedin' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'querylist' is defined but never used.","'queryID' is assigned a value but never used.","'handleButton1' is assigned a value but never used.","'handleButton2' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Dynamic' is assigned a value but never used.","'type' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user' and 'userID'. Either include them or remove the dependency array.","ArrayExpression",["232"],"'FormControl' is defined but never used.","'Button' is defined but never used.",["230"],["231"],"'useEffect' is defined but never used.","'Modal' is defined but never used.","'isLoggedin' is assigned a value but never used.","'id' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Link' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Option' is assigned a value but never used.","'role' is assigned a value but never used.","'setRoles' is assigned a value but never used.",["230"],["231"],"'DeleteFilled' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"233","fix":"234"},"Update the dependencies array to be: [user, userID]",{"range":"235","text":"236"},[2027,2029],"[user, userID]"]